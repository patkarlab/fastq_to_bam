manifest {
	description = 'Nextflow pipeline for getting bam from fastq'
	author = 'Vishram L. Terse'
	nextflowVersion = '20.10.0'
}

params {
	input = "/home/diagnostics/pipelines/fastq_to_bam_paired_snakemake/samplesheet.csv"
	genome = "/home/reference_genomes/hg19_broad/hg19_all.fasta"
	site1 = "/home/reference_genomes/dbSNPGATK/dbsnp_138.hg19.vcf"
	site2 = "/home/reference_genomes/dbSNPGATK/Mills_and_1000G_gold_standard.indels.hg19.sites.vcf"
	adaptors = "/home/programs/Trimmomatic-0.39/adapters/TruSeq2-PE.fa"
	sequences = "/home/diagnostics/pipelines/fastq_to_bam_paired_snakemake/sequences"
	java_path = "/usr/lib/jvm/java-8-openjdk-amd64/bin/"
	bedtools = "/usr/bin/bedtools"
	samtools = "/home/programs/samtools-1.7/samtools"
	picard_path = "/home/programs/picard/build/libs/picard.jar"
	gatk = "/home/diagnostics/programs/gatk-4.2.6.0/gatk"
	fastp = "/home/arpit/miniconda3/bin/fastp"
	run_ichorCNA = "/home/diagnostics/pipelines/fastq_to_bam_paired_snakemake/scripts/run_ichorCNA.sh"
	coverview_path = "/home/programs/CoverView-1.4.3"
	coverview_script_path = "/home/pipelines/mutation_detector_nextflow/scripts/coverview.py"
	star_reference = "/home/diagnostics/pipelines/nf-core/rnafusion/references/star"
	star_gtf_path = "/home/diagnostics/pipelines/nf-core/rnafusion/references/ensembl/Homo_sapiens.GRCh38.102.gtf"
	bwa = "/home/programs/bwa-0.7.12/bwa"
}

trace {
	enabled = true
	overwrite = true
	file = "${params.output}/pipeline_trace.txt"
	fields = 'hash,task_id,name,status,exit,realtime,%cpu,rss'
}

profiles {
	
	singularity {
		singularity.enabled    = true
		singularity.autoMounts = true
	}

	docker {
		docker.enabled = true
		docker.userEmulation = true
	}
}

process {

    // TODO nf-core: Check the defaults for all processes
    cpus   = { 1      * task.attempt }
    memory = { 6.GB   * task.attempt }
    time   = { 4.h    * task.attempt }

    errorStrategy = { task.exitStatus in ((130..145) + 104) ? 'retry' : 'finish' }
    maxRetries    = 1
    maxErrors     = '-1'

    withLabel:process_single {
        cpus   = { 1                   }
        memory = { 6.GB * task.attempt }
        time   = { 4.h  * task.attempt }
    }
    withLabel:process_low {
        cpus   = { 8     * task.attempt }
        memory = { 12.GB * task.attempt }
        time   = { 4.h   * task.attempt }
    }
    withLabel:process_medium {
        cpus   = { 32     * task.attempt }
        memory = { 36.GB * task.attempt }
        time   = { 8.h   * task.attempt }
    }
    withLabel:process_high {
        cpus   = { 64    * task.attempt }
        memory = { 72.GB * task.attempt }
        time   = { 16.h  * task.attempt }
    }
    withLabel:process_long {
        time   = { 20.h  * task.attempt }
    }
    withLabel:process_high_memory {
        memory = { 200.GB * task.attempt }
    }
}

report {
	overwrite = true
}
